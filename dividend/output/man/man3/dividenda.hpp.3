.TH "D:/doxygenintro/dividenda.hpp" 3 "Fri May 21 2021" "Dividend" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/doxygenintro/dividenda.hpp
.SH SYNOPSIS
.br
.PP
\fC#include <eosio/asset\&.hpp>\fP
.br
\fC#include <eosio/eosio\&.hpp>\fP
.br
\fC#include <eosio/system\&.hpp>\fP
.br
\fC#include <eosio/time\&.hpp>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include 'freeos\&.hpp'\fP
.br
\fC#include 'dividend\&.hpp'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBupsert\fP (uint8_t \fBrole_type\fP, name role_acct)"
.br
.RI "The table 'white_list' is used by the action to define the context for the proposal creation and voting (Its defines who is the proposer and the two voters along with storing temporalily vote(s) casted by a given voter on the current proposal (used only by the action 'proposalvote')\&. "
.ti -1c
.RI "void \fBremove\fP (name role_acct)"
.br
.ti -1c
.RI "void \fBdryrun\fP (name proposername)"
.br
.ti -1c
.RI "void \fBproposalnew\fP (const name proposername, const name eosaccount, const uint8_t \fBroi_target_cap\fP, const double period_percentage, const asset threshold, const uint32_t rates_left, const bool locked)"
.br
.ti -1c
.RI "void \fBproposalvote\fP (const name votername, const uint8_t vote)"
.br
.RI "Note: Second vote (if also positive) will mint the new proposed nft\&. The proposal in that case will be erased with writing 'lastaccepted' in the proposal eosaccount field\&. 
.br
 Before writing new nft the function \fBreplay()\fP is called to process remaining iterations If proposal was not accepted is also erased with writing 'lastrefused' in the proposal eosaccount field\&. 
.br
 There is not allowed (and verified) second voting for the same proposer\&. "
.ti -1c
.RI "void \fBpropreset\fP (name proposername)"
.br
.RI "The erased proposal will have written in the field eosaccount the text 'erased'\&. The nftkey in proposal record remains unchanged\&. "
.ti -1c
.RI "void \fBremovewhite\fP ()"
.br
.RI "This action should be considered to run only in testing or in case of administrative changes in OPTIONSDAO\&. "
.ti -1c
.RI "void \fBregchown\fP (name userfrom, name userto, uint64_t nft_id)"
.br
.ti -1c
.RI "void \fBreplay\fP ()"
.br
.ti -1c
.RI "void \fBdividcompute\fP ()"
.br
.ti -1c
.RI "void \fBunlocknft\fP (uint64_t nft_id)"
.br
.ti -1c
.RI "void \fBquery\fP (name eosaccount)"
.br
.ti -1c
.RI "void \fBnotify_front\fP (uint8_t number)"
.br
.ti -1c
.RI "void \fBclearfront\fP ()"
.br
.ti -1c
.RI "void \fBversion\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "CONTRACT \fBdividenda\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Dividend from the source code\&.
