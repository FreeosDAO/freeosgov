<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="points_8hpp" kind="file" language="C++">
    <compoundname>points.hpp</compoundname>
    <includes local="no">eosio/eosio.hpp</includes>
    <includes local="no">eosio/system.hpp</includes>
    <includes refid="freeosgov_8hpp" local="yes">freeosgov.hpp</includes>
    <includes refid="tables_8hpp" local="yes">tables.hpp</includes>
    <includes local="no">cmath</includes>
    <includedby refid="freeosgov_8cpp" local="yes">freeosgov.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>eosio.proton.hpp</label>
        <link refid="eosio_8proton_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>freeosgov.hpp</label>
        <link refid="freeosgov_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>points.hpp</label>
        <link refid="points_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>tables.hpp</label>
        <link refid="tables_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>eosio/asset.hpp</label>
      </node>
      <node id="2">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="8">
        <label>eosio/singleton.hpp</label>
      </node>
      <node id="3">
        <label>eosio/system.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>freeosgov.cpp</label>
        <link refid="freeosgov_8cpp"/>
      </node>
      <node id="1">
        <label>points.hpp</label>
        <link refid="points_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/eosio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/system.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freeosgov_8hpp" kindref="compound">freeosgov.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tables_8hpp" kindref="compound">tables.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefreedao" kindref="compound">freedao</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="group__points_1ga4fc129feed6008b5d856031767fd8eae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;<ref refid="namespacefreedao_1a44c9bfe6ce312f5fc8c56ae9ff86855a" kindref="member">issuer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;maximum_supply)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>require_auth(get_self());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>maximum_supply.symbol;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>check(sym.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>symbol<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>check(maximum_supply.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>supply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>check(maximum_supply.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;max-supply<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a2d6cdb9da9ef8e8ef3422bfd9ee4ae8f" kindref="member">stats</ref><sp/>statstable(get_self(),<sp/>sym.code().raw());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(sym.code().raw());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>check(existing<sp/>==<sp/>statstable.end(),<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>already<sp/>exists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>statstable.emplace(get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>s.supply.symbol<sp/>=<sp/>maximum_supply.symbol;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>s.max_supply<sp/>=<sp/>maximum_supply;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>s.issuer<sp/>=<sp/><ref refid="namespacefreedao_1a44c9bfe6ce312f5fc8c56ae9ff86855a" kindref="member">issuer</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group__points_1ga193a37b2aa3799710b11eca7e08b9746" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::issue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;memo)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>quantity.symbol;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>check(sym.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>symbol<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>check(memo.size()<sp/>&lt;=<sp/>256,<sp/></highlight><highlight class="stringliteral">&quot;memo<sp/>has<sp/>more<sp/>than<sp/>256<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a2d6cdb9da9ef8e8ef3422bfd9ee4ae8f" kindref="member">stats</ref><sp/>statstable(get_self(),<sp/>sym.code().raw());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(sym.code().raw());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>check(existing<sp/>!=<sp/>statstable.end(),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>does<sp/>not<sp/>exist,<sp/>create<sp/>token<sp/>before<sp/>issue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;st<sp/>=<sp/>*existing;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>check(to<sp/>==<sp/>st.issuer,<sp/></highlight><highlight class="stringliteral">&quot;tokens<sp/>can<sp/>only<sp/>be<sp/>issued<sp/>to<sp/>issuer<sp/>account&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>check(quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>check(quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>issue<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>check(quantity.symbol<sp/>==<sp/>st.supply.symbol,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>check(quantity.amount<sp/>&lt;=<sp/>st.max_supply.amount<sp/>-<sp/>st.supply.amount,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;quantity<sp/>exceeds<sp/>available<sp/>supply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>statstable.modify(st,<sp/>same_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{<sp/>s.supply<sp/>+=<sp/>quantity;<sp/>});</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga3de396c5ddc66e511d33cf3eff1e984e" kindref="member">add_balance</ref>(st.issuer,<sp/>quantity,<sp/>st.issuer);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__points_1gaa899256b67a997f284069de37053b1ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::retire(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;memo)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>quantity.symbol;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>check(sym.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>symbol<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>check(memo.size()<sp/>&lt;=<sp/>256,<sp/></highlight><highlight class="stringliteral">&quot;memo<sp/>has<sp/>more<sp/>than<sp/>256<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a2d6cdb9da9ef8e8ef3422bfd9ee4ae8f" kindref="member">stats</ref><sp/>statstable(get_self(),<sp/>sym.code().raw());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(sym.code().raw());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>check(existing<sp/>!=<sp/>statstable.end(),<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;st<sp/>=<sp/>*existing;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>check(quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>check(quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>retire<sp/>positive<sp/>quantity<sp/>of<sp/>POINTs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>check(quantity.symbol<sp/>==<sp/>st.supply.symbol,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>statstable.modify(st,<sp/>same_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{<sp/>s.supply<sp/>-=<sp/>quantity;<sp/>});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga010a7cd8c211c200e4a79b2a7f044a95" kindref="member">sub_balance</ref>(st.issuer,<sp/>quantity);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__points_1ga7d7f4ee6456e168e1464cecffb8282bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::allocate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;memo)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>require_auth(from);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>&apos;from&apos;<sp/>account<sp/>is<sp/>in<sp/>the<sp/>transferer<sp/>whitelist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a9780e676cbaecb480b1ff5944121b999" kindref="member">transferers_index</ref><sp/>transferers_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transferer_iterator<sp/>=<sp/>transferers_table.find(from.value);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>check(transferer_iterator<sp/>!=<sp/>transferers_table.end(),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>allocate<sp/>action<sp/>is<sp/>protected<sp/>by<sp/>transferers<sp/>whitelist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>&apos;from&apos;<sp/>user<sp/>is<sp/>in<sp/>the<sp/>transferers<sp/>table<sp/>then<sp/>call<sp/>the<sp/>transfer<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga1ad20b46e07e76ab22ce65cfcf144098" kindref="member">transfer</ref>(from,<sp/>to,<sp/>quantity,<sp/>memo);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="group__points_1gac93b758053acebce53fa76cae9c38fc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::unlock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;user)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>require_auth(user);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>user-activity-driven<sp/>background<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="group__core_1ga707783d4644c3b79cedf5e6f037ebbd4" kindref="member">tick</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>system<sp/>is<sp/>operational<sp/>masterswitch<sp/>parameter<sp/>set<sp/>to<sp/>&quot;1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>check(<ref refid="group__core_1ga51aa050f2ae06745744b56cd04184c96" kindref="member">check_master_switch</ref>(),<sp/><ref refid="constants_8hpp_1ae275e78329194567be33e687db0f4a55" kindref="member">MSG_FREEOS_SYSTEM_NOT_AVAILABLE</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>current<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>uint32_t<sp/>this_iteration<sp/>=<sp/><ref refid="group__core_1ga227e0705813c5a3ab9dfcdc438d667b2" kindref="member">current_iteration</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>check(this_iteration<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;unlocking<sp/>is<sp/>not<sp/>possible<sp/>at<sp/>this<sp/>time,<sp/>please<sp/>try<sp/>later&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>amount<sp/>to<sp/>be<sp/>unvested<sp/>-<sp/>get<sp/>the<sp/>percentage<sp/>for<sp/>the<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1af856d8ec4e25c214e10d3e1a6f961bc8" kindref="member">system_index</ref><sp/>system_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>system_iterator<sp/>=<sp/>system_table.begin();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>check(system_iterator<sp/>!=<sp/>system_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;system<sp/>record<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>uint32_t<sp/>unlock_percent<sp/>=<sp/>system_iterator-&gt;unlockpercent;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>unvest<sp/>percentage<sp/>is<sp/>within<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>check(unlock_percent<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>unlock_percent<sp/>&lt;=<sp/>100,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;locked<sp/>POINTs<sp/>cannot<sp/>be<sp/>unlocked<sp/>in<sp/>this<sp/>claim<sp/>period.<sp/>Please<sp/>try<sp/>during<sp/>next<sp/>claim<sp/>period&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>the<sp/>user<sp/>unlocked<sp/>in<sp/>this<sp/>iteration?<sp/>-<sp/>consult<sp/>the<sp/>unvest<sp/>history<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1acb597ff93395a752c35b1b97ff1cc0c0" kindref="member">unvest_index</ref><sp/>unvest_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unvest_iterator<sp/>=<sp/>unvest_table.begin();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>unvest<sp/>record<sp/>exists<sp/>for<sp/>the<sp/>current<sp/>iteration<sp/>then<sp/>the<sp/>user<sp/>has<sp/>already<sp/>unvested,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>is<sp/>not<sp/>eligible<sp/>to<sp/>unvest<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unvest_iterator<sp/>!=<sp/>unvest_table.end())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>check(unvest_iterator-&gt;iteration_number<sp/>!=<sp/>this_iteration,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;user<sp/>has<sp/>already<sp/>unlocked<sp/>in<sp/>this<sp/>iteration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>unlocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>user&apos;s<sp/>unvested<sp/>POINT<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>asset<sp/>locked_balance<sp/>=<sp/>asset(0,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab8b3032b5445fb0374789bd51ca4b2b5" kindref="member">lockaccounts</ref><sp/>locked_accounts_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>locked_account_iterator<sp/>=<sp/>locked_accounts_table.begin();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locked_account_iterator<sp/>!=<sp/>locked_accounts_table.end())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>locked_balance<sp/>=<sp/>locked_account_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>user&apos;s<sp/>locked<sp/>balance<sp/>is<sp/>0<sp/>then<sp/>nothing<sp/>to<sp/>do,<sp/>so<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locked_balance.amount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>amount<sp/>of<sp/>locked<sp/>POINTs<sp/>to<sp/>convert<sp/>to<sp/>liquid<sp/>POINTs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>these<sp/>calculations<sp/>use<sp/>mixed-type<sp/>arithmetic.<sp/>Any<sp/>changes<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>thoroughly<sp/>tested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>percentage<sp/>=<sp/>unlock_percent<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>locked_amount<sp/>=<sp/>locked_balance.amount<sp/>/<sp/>10000.0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>percentage_applied<sp/>=<sp/>locked_amount<sp/>*<sp/>percentage;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>adjusted_amount<sp/>=<sp/>ceil(percentage_applied);<sp/></highlight><highlight class="comment">//<sp/>rounding<sp/>up<sp/>to<sp/>whole<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>uint64_t<sp/>adjusted_units<sp/>=<sp/>adjusted_amount<sp/>*<sp/>10000;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>prevent<sp/>rounding<sp/>up<sp/>to<sp/>more<sp/>than<sp/>the<sp/>locked<sp/>point<sp/>balance,<sp/>apply<sp/>this<sp/>adjustment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>bring<sp/>the<sp/>locked<sp/>balance<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjusted_units<sp/>&gt;<sp/>locked_balance.amount)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>adjusted_units<sp/>=<sp/>locked_balance.amount;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>asset<sp/>converted_points<sp/>=<sp/>asset(adjusted_units,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>std::string<sp/>memo<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;unlocking<sp/>POINTs<sp/>by<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>memo.append(user.to_string());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>the<sp/>required<sp/>amount<sp/>to<sp/>the<sp/>freeos<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(converted_points.amount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__points_1ga193a37b2aa3799710b11eca7e08b9746" kindref="member">issue</ref>(get_self(),<sp/>converted_points,<sp/>memo);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>liquid<sp/>POINTs<sp/>to<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__points_1ga1ad20b46e07e76ab22ce65cfcf144098" kindref="member">transfer</ref>(get_self(),<sp/>user,<sp/>converted_points,<sp/>memo);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>the<sp/>amount<sp/>transferred<sp/>from<sp/>the<sp/>unvested<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>locked_accounts_table.modify(locked_account_iterator,<sp/>get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;v)<sp/>{<sp/>v.balance<sp/>-=<sp/>converted_points;<sp/>});</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>the<sp/>unlock<sp/>event<sp/>in<sp/>the<sp/>unvest<sp/>history<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>unvest_iterator<sp/>=<sp/>unvest_table.begin();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unvest_iterator<sp/>==<sp/>unvest_table.end())<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>unvest_table.emplace(get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;unvest)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unvest.iteration_number<sp/>=<sp/>this_iteration;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>unvest_table.modify(unvest_iterator,<sp/>same_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;unvest)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unvest.iteration_number<sp/>=<sp/>this_iteration;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group__points_1ga9e690436f328f9e2cf803812335e26e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::mint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;minter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;memo)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>&apos;to&apos;<sp/>account<sp/>is<sp/>in<sp/>the<sp/>minter<sp/>whitelist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ac7f8bb0dea2c97998362321c24e0b8de" kindref="member">minters_index</ref><sp/>minters_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>minter_iterator<sp/>=<sp/>minters_table.find(minter.value);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>check(minter_iterator<sp/>!=<sp/>minters_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>mint<sp/>action<sp/>is<sp/>protected<sp/>by<sp/>minters<sp/>whitelist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>require_auth(minter);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>&apos;to&apos;<sp/>user<sp/>is<sp/>in<sp/>the<sp/>minters<sp/>table<sp/>then<sp/>call<sp/>the<sp/>issue<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga193a37b2aa3799710b11eca7e08b9746" kindref="member">issue</ref>(to,<sp/>quantity,<sp/>memo);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::burn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;burner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;memo)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>&apos;burner&apos;<sp/>account<sp/>is<sp/>in<sp/>the<sp/>burner<sp/>whitelist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a6ababdc763941b1ed90c6a30e543834b" kindref="member">burners_index</ref><sp/>burners_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>burner_iterator<sp/>=<sp/>burners_table.find(burner.value);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>check(burner_iterator<sp/>!=<sp/>burners_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>burn<sp/>action<sp/>is<sp/>protected<sp/>by<sp/>burners<sp/>whitelist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>require_auth(burner);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>&apos;to&apos;<sp/>user<sp/>is<sp/>in<sp/>the<sp/>burners<sp/>table<sp/>then<sp/>call<sp/>the<sp/>retire<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="group__points_1gaa899256b67a997f284069de37053b1ad" kindref="member">retire</ref>(quantity,<sp/>memo);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="group__points_1ga1ad20b46e07e76ab22ce65cfcf144098" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::transfer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;memo)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>check(from<sp/>!=<sp/>to,<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>transfer<sp/>to<sp/>self&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>require_auth(from);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>check(is_account(to),<sp/></highlight><highlight class="stringliteral">&quot;to<sp/>account<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>quantity.symbol.code();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a2d6cdb9da9ef8e8ef3422bfd9ee4ae8f" kindref="member">stats</ref><sp/>statstable(get_self(),<sp/>sym.raw());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;st<sp/>=<sp/>statstable.get(sym.raw());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>require_recipient(from);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>require_recipient(to);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>check(quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>check(quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>transfer<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>check(quantity.symbol<sp/>==<sp/>st.supply.symbol,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>check(memo.size()<sp/>&lt;=<sp/>256,<sp/></highlight><highlight class="stringliteral">&quot;memo<sp/>has<sp/>more<sp/>than<sp/>256<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>payer<sp/>=<sp/>has_auth(to)<sp/>?<sp/>to<sp/>:<sp/>from;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga010a7cd8c211c200e4a79b2a7f044a95" kindref="member">sub_balance</ref>(from,<sp/>quantity);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga3de396c5ddc66e511d33cf3eff1e984e" kindref="member">add_balance</ref>(to,<sp/>quantity,<sp/>payer);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__points_1ga010a7cd8c211c200e4a79b2a7f044a95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::sub_balance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a38503d8a260b82289f804bbd89b0efe0" kindref="member">accounts</ref><sp/>from_acnts(get_self(),<sp/>owner.value);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;from<sp/>=</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>from_acnts.get(<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>.symbol.code().raw(),<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>balance<sp/>object<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>check(from.balance.amount<sp/>&gt;=<sp/><ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>.amount,<sp/></highlight><highlight class="stringliteral">&quot;overdrawn<sp/>balance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>from_acnts.modify(from,<sp/>owner,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;a)<sp/>{<sp/>a.balance<sp/>-=<sp/><ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>;<sp/>});</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="group__points_1ga3de396c5ddc66e511d33cf3eff1e984e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::add_balance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;ram_payer)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a38503d8a260b82289f804bbd89b0efe0" kindref="member">accounts</ref><sp/>to_acnts(get_self(),<sp/>owner.value);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to<sp/>=<sp/>to_acnts.find(<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>.symbol.code().raw());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to<sp/>==<sp/>to_acnts.end())<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>to_acnts.emplace(ram_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;a)<sp/>{<sp/>a.balance<sp/>=<sp/><ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>;<sp/>});</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>to_acnts.modify(to,<sp/>same_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;a)<sp/>{<sp/>a.balance<sp/>+=<sp/><ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>;<sp/>});</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="group__points_1gacedaaa66b9a9b7bc12f462055cbc25b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::mintfreebi(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;quantity)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>require_auth(owner);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>system<sp/>is<sp/>operational<sp/>(masterswitch<sp/>parameter<sp/>set<sp/>to<sp/>&quot;1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>check(<ref refid="group__core_1ga51aa050f2ae06745744b56cd04184c96" kindref="member">check_master_switch</ref>(),<sp/><ref refid="constants_8hpp_1ae275e78329194567be33e687db0f4a55" kindref="member">MSG_FREEOS_SYSTEM_NOT_AVAILABLE</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>uint32_t<sp/>this_iteration<sp/>=<sp/><ref refid="group__core_1ga227e0705813c5a3ab9dfcdc438d667b2" kindref="member">current_iteration</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>system<sp/>operational?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>check(this_iteration<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>freeos<sp/>system<sp/>is<sp/>not<sp/>available<sp/>at<sp/>this<sp/>time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>&apos;owner&apos;<sp/>user<sp/>verified?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>check(<ref refid="group__identity_1ga3958d16d2ce524d53eb907e7826f5046" kindref="member">is_user_verified</ref>(owner),<sp/></highlight><highlight class="stringliteral">&quot;minting<sp/>is<sp/>restricted<sp/>to<sp/>verified<sp/>users&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>quantity.symbol;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>check(sym<sp/>==<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>symbol<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>user<sp/>has<sp/>the<sp/>appropriate<sp/>balance<sp/>to<sp/>mint<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>POINT<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points_balance_amount<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a38503d8a260b82289f804bbd89b0efe0" kindref="member">accounts</ref><sp/>points_accounts_table(get_self(),<sp/>owner.value);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points_iterator<sp/>=<sp/>points_accounts_table.find(<ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>.code().raw());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_iterator<sp/>!=<sp/>points_accounts_table.end())<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>points_balance_amount<sp/>=<sp/>points_iterator-&gt;balance.amount;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>check(points_balance_amount<sp/>&gt;=<sp/>quantity.amount,<sp/></highlight><highlight class="stringliteral">&quot;user<sp/>has<sp/>insufficient<sp/>POINTs<sp/>balance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a2d6cdb9da9ef8e8ef3422bfd9ee4ae8f" kindref="member">stats</ref><sp/>statstable(get_self(),<sp/>sym.code().raw());</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(sym.code().raw());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>check(existing<sp/>!=<sp/>statstable.end(),<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;st<sp/>=<sp/>*existing;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>check(quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>check(quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>convert<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>statstable.modify(st,<sp/>same_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>s.supply<sp/>-=<sp/>quantity;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decrease<sp/>owner&apos;s<sp/>balance<sp/>of<sp/>non-exchangeable<sp/>tokens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga010a7cd8c211c200e4a79b2a7f044a95" kindref="member">sub_balance</ref>(owner,<sp/>quantity);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>exchangeable<sp/>tokens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>asset<sp/>exchangeable_amount<sp/>=<sp/>asset(quantity.amount,<sp/><ref refid="constants_8hpp_1a93fac2ae842815fa60baea0d9c3da04e" kindref="member">FREEBI_CURRENCY_SYMBOL</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>std::string<sp/>memo<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;minting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ask<sp/>FREEBI<sp/>contract<sp/>to<sp/>issue<sp/>an<sp/>equivalent<sp/>amount<sp/>of<sp/>FREEBI<sp/>tokens<sp/>to<sp/>the<sp/>freeosgov<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>freebi_tokens_contract<sp/>=<sp/><ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freebitokens&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>action<sp/>issue_action<sp/>=<sp/>action(</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{get_self(),<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freebi_tokens_contract),</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;issue&quot;</highlight><highlight class="normal">_n,<sp/>std::make_tuple(get_self(),<sp/>exchangeable_amount,<sp/>memo));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>issue_action.send();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>FREEBI<sp/>tokens<sp/>to<sp/>the<sp/>owner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>action<sp/>transfer_action<sp/>=<sp/>action(</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{get_self(),<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freebi_tokens_contract),</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(get_self(),<sp/>owner,<sp/>exchangeable_amount,<sp/>memo));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>transfer_action.send();</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="group__points_1ga17eb2820132fccb693b7f9f3bcfc2a32" refkind="member"><highlight class="normal">asset<sp/>freeosgov::calculate_mint_fee(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>&amp;user,<sp/>asset<sp/>&amp;mint_quantity,<sp/>symbol<sp/>mint_fee_currency)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>asset<sp/><ref refid="group__points_1ga73658ba9535383e56d733cb7fa6c59bf" kindref="member">mintfee</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a0b34424d7acb05e1c74c39efd55405ec" kindref="member">mint_fee_percent</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mintfee_amount<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>amount<sp/>of<sp/>currency,<sp/>e.g.<sp/>123.4567<sp/>represents<sp/>123.4567<sp/>FREEOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>int64_t<sp/>mintfee_units<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>units<sp/>of<sp/>currency,<sp/>e.g.<sp/>1234567<sp/>represents<sp/>123.4567<sp/>FREEOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>check(mint_quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>mint<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>the<sp/>latest<sp/>mint<sp/>fee<sp/>percent<sp/>from<sp/>the<sp/>last<sp/>reward<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a8b665c22546d9228bf05392a7fcf2834" kindref="member">rewards_index</ref><sp/>rewards_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reward_iterator<sp/>=<sp/>rewards_table.rbegin();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>check(reward_iterator<sp/>!=<sp/>rewards_table.rend(),<sp/></highlight><highlight class="stringliteral">&quot;latest<sp/>reward<sp/>record<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>latest<sp/>voted<sp/>mint<sp/>fee<sp/>percent<sp/>-<sp/>depending<sp/>on<sp/>which<sp/>currency<sp/>user<sp/>is<sp/>paying<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mint_fee_currency<sp/>==<sp/><sp/>symbol(<ref refid="constants_8hpp_1a345f03bc321561d355374b1876790885" kindref="member">FREEOS_CURRENCY_CODE</ref>,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1a0b34424d7acb05e1c74c39efd55405ec" kindref="member">mint_fee_percent</ref><sp/>=<sp/>reward_iterator-&gt;mint_fee_percent;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mint_fee_currency<sp/>==<sp/><sp/>symbol(<ref refid="constants_8hpp_1a322f6b19bf9367011d003dae4651db49" kindref="member">XPR_CURRENCY_CODE</ref>,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1a0b34424d7acb05e1c74c39efd55405ec" kindref="member">mint_fee_percent</ref><sp/>=<sp/>reward_iterator-&gt;mint_fee_percent_xpr;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mint_fee_currency<sp/>==<sp/><sp/>symbol(<ref refid="constants_8hpp_1aad637adeeb893f4a0bd7d97984c5ff6e" kindref="member">XUSDC_CURRENCY_CODE</ref>,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1a0b34424d7acb05e1c74c39efd55405ec" kindref="member">mint_fee_percent</ref><sp/>=<sp/>reward_iterator-&gt;mint_fee_percent_xusdc;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>work<sp/>in<sp/>double<sp/>rather<sp/>asset<sp/>for<sp/>accuracy<sp/>in<sp/>division<sp/>and<sp/>because<sp/>currencies<sp/>(e.g.<sp/>FREEOS,<sp/>XPR<sp/>and<sp/>XUSDC)<sp/>have<sp/>different<sp/>precisions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amount_in_units<sp/>=<sp/>mint_quantity.amount<sp/>/<sp/>10000.0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mintfee_in_freeos<sp/>=<sp/>amount_in_units<sp/>*<sp/>(<ref refid="namespacefreedao_1a0b34424d7acb05e1c74c39efd55405ec" kindref="member">mint_fee_percent</ref><sp/>/<sp/>100.0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>the<sp/>minimum<sp/>fee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mintfee_min<sp/>=<sp/><ref refid="group__config_1ga4b5e6e573da276f6e662735cc4caaedc" kindref="member">get_dparameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;mintfeemin&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mintfee_in_freeos<sp/>&lt;<sp/>mintfee_min)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>mintfee_in_freeos<sp/>=<sp/>mintfee_min;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>the<sp/>currency<sp/>conversion<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mint_fee_currency<sp/>==<sp/>symbol(<ref refid="constants_8hpp_1a345f03bc321561d355374b1876790885" kindref="member">FREEOS_CURRENCY_CODE</ref>,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>mintfee_units<sp/>=<sp/>mintfee_in_freeos<sp/>*<sp/>10000;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversion<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>FREEOS<sp/>exchange<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1ab6ecc73c0f66f2c2d359d1b4268c167a" kindref="member">currencies_index</ref><sp/>currencies_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>freeos_iterator<sp/>=<sp/>currencies_table.find(symbol(<ref refid="constants_8hpp_1a345f03bc321561d355374b1876790885" kindref="member">FREEOS_CURRENCY_CODE</ref>,<sp/>4).raw());</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>check(freeos_iterator<sp/>!=<sp/>currencies_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;FREEOS<sp/>currency<sp/>record<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freeos_rate<sp/>=<sp/>freeos_iterator-&gt;usdrate;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mint_fee_currency<sp/>==<sp/>symbol(<ref refid="constants_8hpp_1a322f6b19bf9367011d003dae4651db49" kindref="member">XPR_CURRENCY_CODE</ref>,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>XPR<sp/>exchange<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xpr_iterator<sp/>=<sp/>currencies_table.find(symbol(<ref refid="constants_8hpp_1a322f6b19bf9367011d003dae4651db49" kindref="member">XPR_CURRENCY_CODE</ref>,<sp/>4).raw());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(xpr_iterator<sp/>!=<sp/>currencies_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;XPR<sp/>currency<sp/>record<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xpr_rate<sp/>=<sp/>xpr_iterator-&gt;usdrate;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mintfee_amount<sp/>=<sp/>round(mintfee_in_freeos<sp/>*<sp/>freeos_rate<sp/>/<sp/>xpr_rate<sp/>*<sp/>10000);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mintfee_units<sp/>=<sp/>(int64_t)<sp/>mintfee_amount;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mint_fee_currency<sp/>==<sp/>symbol(<ref refid="constants_8hpp_1aad637adeeb893f4a0bd7d97984c5ff6e" kindref="member">XUSDC_CURRENCY_CODE</ref>,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>XUSDC<sp/>exchange<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xusdc_iterator<sp/>=<sp/>currencies_table.find(symbol(<ref refid="constants_8hpp_1aad637adeeb893f4a0bd7d97984c5ff6e" kindref="member">XUSDC_CURRENCY_CODE</ref>,<sp/>6).raw());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(xusdc_iterator<sp/>!=<sp/>currencies_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;XUSDC<sp/>currency<sp/>record<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xusdc_rate<sp/>=<sp/>xusdc_iterator-&gt;usdrate;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mintfee_amount<sp/>=<sp/>round(mintfee_in_freeos<sp/>*<sp/>freeos_rate<sp/>/<sp/>xusdc_rate<sp/>*<sp/>1000000);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mintfee_units<sp/>=<sp/>(int64_t)<sp/>mintfee_amount;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga73658ba9535383e56d733cb7fa6c59bf" kindref="member">mintfee</ref><sp/>=<sp/>asset(mintfee_units,<sp/>mint_fee_currency);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>asset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DIAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check(false,<sp/>&quot;mintfee_amount<sp/>=<sp/>&quot;<sp/>+<sp/>to_string(mintfee_amount)<sp/>+<sp/>&quot;,<sp/>mintfee_units<sp/>=<sp/>&quot;<sp/>+<sp/>to_string(mintfee_units)<sp/>+<sp/>&quot;,<sp/>mint<sp/>fee<sp/>=<sp/>&quot;<sp/>+<sp/>mintfee.to_string());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__points_1ga73658ba9535383e56d733cb7fa6c59bf" kindref="member">mintfee</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>not<sp/>called.<sp/>If<sp/>the<sp/>mintfreeos<sp/>transaction<sp/>fails<sp/>then<sp/>all<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>transaction<sp/>are<sp/>rolled<sp/>back,<sp/>which<sp/>means<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>refund<sp/>the<sp/>mint<sp/>fee.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>code<sp/>is<sp/>reserved<sp/>for<sp/>future<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="group__points_1gaf31f2d05e9eefd4548fe930a112db1eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::refund_mintfee(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user,<sp/>symbol<sp/>mint_fee_currency)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab37d82698fb58bac78c9056214f79ffb" kindref="member">credit_index</ref><sp/>credit_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>credit_iterator<sp/>=<sp/>credit_table.find(mint_fee_currency.code().raw());</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(credit_iterator<sp/>==<sp/>credit_table.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>credit<sp/>record,<sp/>so<sp/>nothing<sp/>to<sp/>refund</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>asset<sp/>mintfee_paid<sp/>=<sp/>credit_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>symbol<sp/>mintfee_symbol<sp/>=<sp/>mintfee_paid.symbol;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>up<sp/>the<sp/>currencies<sp/>table<sp/>to<sp/>get<sp/>the<sp/>contract<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab6ecc73c0f66f2c2d359d1b4268c167a" kindref="member">currencies_index</ref><sp/>currencies_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currency_iterator<sp/>=<sp/>currencies_table.find(mintfee_symbol.raw());</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currency_iterator<sp/>==<sp/>currencies_table.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>unknown<sp/>currency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>currency_contract<sp/>=<sp/>currency_iterator-&gt;contract;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>the<sp/>fee<sp/>back<sp/>to<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>action<sp/>transfer_action<sp/>=<sp/>action(</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{get_self(),<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},<sp/>currency_contract,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(get_self(),<sp/>user,<sp/>mintfee_paid,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;refund<sp/>of<sp/>incorrect<sp/>freeos<sp/>mint<sp/>fee&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>transfer_action.send();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>credit<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>credit_table.erase(credit_iterator);</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="group__points_1ga20fb8e9e29cb529477ed800fa022e1c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeosgov::process_mint_fee(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user,<sp/>asset<sp/>mint_quantity,<sp/>symbol<sp/>mint_fee_currency)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mintfee_status;<sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>set<sp/>to<sp/>true<sp/>if<sp/>correct<sp/>mint<sp/>fee<sp/>has<sp/>been<sp/>paid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>mint<sp/>fee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>asset<sp/><ref refid="group__points_1ga73658ba9535383e56d733cb7fa6c59bf" kindref="member">mintfee</ref><sp/>=<sp/><ref refid="group__points_1ga17eb2820132fccb693b7f9f3bcfc2a32" kindref="member">calculate_mint_fee</ref>(user,<sp/>mint_quantity,<sp/>mint_fee_currency);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>the<sp/>user<sp/>paid<sp/>the<sp/>mint<sp/>fee,<sp/>i.e.<sp/>got<sp/>credit?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>asset<sp/>user_credit<sp/>=<sp/>asset(0,<sp/>mint_fee_currency);<sp/><sp/></highlight><highlight class="comment">//<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab37d82698fb58bac78c9056214f79ffb" kindref="member">credit_index</ref><sp/>credit_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>credit_iterator<sp/>=<sp/>credit_table.find(mint_fee_currency.code().raw());</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(credit_iterator<sp/>!=<sp/>credit_table.end())<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>user_credit<sp/>=<sp/>credit_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>mint-fee<sp/>paid<sp/>is<sp/>the<sp/>right<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__points_1ga73658ba9535383e56d733cb7fa6c59bf" kindref="member">mintfee</ref><sp/>==<sp/>user_credit)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>the<sp/>credit<sp/>record<sp/>(if<sp/>paid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(credit_iterator<sp/>!=<sp/>credit_table.end())<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>credit_table.erase(credit_iterator);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>mintfee_status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>incorrect<sp/>amount<sp/>-<sp/>refund<sp/>the<sp/>incorrect<sp/>mint<sp/>fee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__points_1gaf31f2d05e9eefd4548fe930a112db1eb" kindref="member">refund_mintfee</ref>(user,<sp/>mint_fee_currency);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>mintfee_status<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mintfee_status;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="group__points_1ga06c068a58e41615ae7bea92f2c3adaea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::adjust_balances_from_points(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;input_quantity)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a2d6cdb9da9ef8e8ef3422bfd9ee4ae8f" kindref="member">stats</ref><sp/>statstable(get_self(),<sp/>input_quantity.symbol.code().raw());</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(input_quantity.symbol.code().raw());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>check(existing<sp/>!=<sp/>statstable.end(),<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;st<sp/>=<sp/>*existing;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>decrease<sp/>user&apos;s<sp/>balance<sp/>of<sp/>POINTs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="group__points_1ga010a7cd8c211c200e4a79b2a7f044a95" kindref="member">sub_balance</ref>(user,<sp/>input_quantity);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>burn<sp/>the<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>statstable.modify(st,<sp/>same_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.supply<sp/>-=<sp/>input_quantity;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="group__points_1ga7a752c5f88082b72e941bc5ee39b7ee8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::adjust_balances_from_freebi(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;input_quantity)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>have<sp/>a<sp/>credit<sp/>for<sp/>the<sp/>input<sp/>FREEBI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab37d82698fb58bac78c9056214f79ffb" kindref="member">credit_index</ref><sp/>credits_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>credit_iterator<sp/>=<sp/>credits_table.find(input_quantity.symbol.code().raw());</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>is<sp/>not<sp/>a<sp/>credit<sp/>record,<sp/>proceed<sp/>no<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>check(credit_iterator<sp/>!=<sp/>credits_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>FREEBI<sp/>amount<sp/>has<sp/>not<sp/>been<sp/>paid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>it<sp/>is<sp/>for<sp/>the<sp/>right<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>asset<sp/>freebi_paid<sp/>=<sp/>credit_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>check(freebi_paid<sp/>==<sp/>input_quantity,<sp/></highlight><highlight class="stringliteral">&quot;incorrect<sp/>amount<sp/>of<sp/>freebi<sp/>has<sp/>been<sp/>paid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>FREEBI<sp/>credit<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>credits_table.erase(credit_iterator);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>burn<sp/>the<sp/>FREEBI<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>freebi_tokens_contract<sp/>=<sp/><ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freebitokens&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>action<sp/>retire_freebi_action<sp/>=<sp/>action(</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>permission_level{get_self(),<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freebi_tokens_contract),</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;retire&quot;</highlight><highlight class="normal">_n,<sp/>std::make_tuple(input_quantity,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;burning<sp/>FREEBI<sp/>to<sp/>mint<sp/>FREEOS&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>retire_freebi_action.send();</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="group__points_1ga2e561e548c70dcdf75bf6ffc0076bbdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::mintfreeos(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>&amp;input_quantity,<sp/>symbol<sp/>&amp;mint_fee_currency,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_airclaim_points)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>require_auth(user);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>system<sp/>is<sp/>operational<sp/>(masterswitch<sp/>parameter<sp/>set<sp/>to<sp/>&quot;1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>check(<ref refid="group__core_1ga51aa050f2ae06745744b56cd04184c96" kindref="member">check_master_switch</ref>(),<sp/><ref refid="constants_8hpp_1ae275e78329194567be33e687db0f4a55" kindref="member">MSG_FREEOS_SYSTEM_NOT_AVAILABLE</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>uint32_t<sp/>this_iteration<sp/>=<sp/><ref refid="group__core_1ga227e0705813c5a3ab9dfcdc438d667b2" kindref="member">current_iteration</ref>();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>system<sp/>operational?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>check(this_iteration<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>freeos<sp/>system<sp/>is<sp/>not<sp/>available<sp/>at<sp/>this<sp/>time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>check(input_quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>check(input_quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>mint<sp/>a<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>user<sp/>has<sp/>the<sp/>appropriate<sp/>POINTs<sp/>balance<sp/>to<sp/>mint<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>need<sp/>to<sp/>do<sp/>this<sp/>for<sp/>minting<sp/>from<sp/>FREEBI<sp/>because<sp/>the<sp/>FREEBI<sp/>is<sp/>sent<sp/>as<sp/>a<sp/>transfer<sp/>credit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_quantity.symbol<sp/>==<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>POINT<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points_balance_amount<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1a38503d8a260b82289f804bbd89b0efe0" kindref="member">accounts</ref><sp/>points_accounts_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points_iterator<sp/>=<sp/>points_accounts_table.find(<ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>.code().raw());</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_iterator<sp/>!=<sp/>points_accounts_table.end())<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points_balance_amount<sp/>=<sp/>points_iterator-&gt;balance.amount;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>check(points_balance_amount<sp/>&gt;=<sp/>input_quantity.amount,<sp/></highlight><highlight class="stringliteral">&quot;user<sp/>has<sp/>insufficient<sp/>POINTs<sp/>balance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_airclaim_points<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__identity_1ga902ae7ebb4bdaf3e2c79debe7837d21f" kindref="member">has_nft</ref>(user)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>users<sp/>with<sp/>an<sp/>active<sp/>NFT<sp/>do<sp/>not<sp/>pay<sp/>the<sp/>mint<sp/>fee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>user<sp/>has<sp/>paid<sp/>correct<sp/>mint<sp/>fee,<sp/>whether<sp/>they<sp/>have<sp/>a<sp/>credit<sp/>record,<sp/>adjust<sp/>their<sp/>mintfeefree<sp/>allowance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<ref refid="group__points_1ga20fb8e9e29cb529477ed800fa022e1c3" kindref="member">process_mint_fee</ref>(user,<sp/>input_quantity,<sp/>mint_fee_currency)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;incorrect<sp/>mint<sp/>fee<sp/>has<sp/>been<sp/>paid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>mff<sp/>balance,<sp/>then<sp/>decrease<sp/>by<sp/>the<sp/>appropriate<sp/>amount<sp/>of<sp/>POINTs<sp/>minted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>user&apos;s<sp/>mff<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>asset<sp/>mff_balance<sp/>=<sp/>asset(0,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1ac80aa2ff9b31f7f50b0c3e369ab0f076" kindref="member">mintfeefree_index</ref><sp/>mff_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mff_iterator<sp/>=<sp/>mff_table.begin();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mff_iterator<sp/>!=<sp/>mff_table.end())<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mff_balance<sp/>=<sp/>mff_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>the<sp/>user<sp/>has<sp/>enough<sp/>mff<sp/>POINTs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>check(input_quantity.amount<sp/>&lt;=<sp/>mff_balance.amount,<sp/></highlight><highlight class="stringliteral">&quot;insufficient<sp/>Airclaim<sp/>points<sp/>to<sp/>mint<sp/>the<sp/>requested<sp/>amount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrease<sp/>the<sp/>mff<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>mff_table.modify(mff_iterator,<sp/>get_self(),</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mff)<sp/>{<sp/>mff.balance<sp/>-=<sp/>input_quantity;<sp/>});</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>processing<sp/>required<sp/>for<sp/>input_quantity<sp/>currencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_quantity.symbol<sp/>==<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__points_1ga06c068a58e41615ae7bea92f2c3adaea" kindref="member">adjust_balances_from_points</ref>(user,<sp/>input_quantity);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_quantity.symbol<sp/>==<sp/><ref refid="constants_8hpp_1a93fac2ae842815fa60baea0d9c3da04e" kindref="member">FREEBI_CURRENCY_SYMBOL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__points_1ga7a752c5f88082b72e941bc5ee39b7ee8" kindref="member">adjust_balances_from_freebi</ref>(user,<sp/>input_quantity);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>check(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>currency<sp/>for<sp/>input<sp/>quantity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>FREEOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>asset<sp/>exchangeable_amount<sp/>=<sp/>asset(input_quantity.amount,<sp/><ref refid="constants_8hpp_1a360697c1e66dbae79be5ad3315c93924" kindref="member">FREEOS_CURRENCY_SYMBOL</ref>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>std::string<sp/>memo<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;minting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ask<sp/>FREEOS<sp/>contract<sp/>to<sp/>issue<sp/>an<sp/>equivalent<sp/>amount<sp/>of<sp/>FREEOS<sp/>tokens<sp/>to<sp/>the<sp/>freeosgov<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>freeos_tokens_contract<sp/>=<sp/><ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freeostokens&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>action<sp/>issue_action<sp/>=<sp/>action(</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{get_self(),<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freeos_tokens_contract),</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;issue&quot;</highlight><highlight class="normal">_n,<sp/>std::make_tuple(get_self(),<sp/>exchangeable_amount,<sp/>memo));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>issue_action.send();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>FREEOS<sp/>tokens<sp/>to<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>action<sp/>transfer_action<sp/>=<sp/>action(</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{get_self(),<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freeos_tokens_contract),</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(get_self(),<sp/>user,<sp/>exchangeable_amount,<sp/>memo));</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>transfer_action.send();</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="group__points_1ga1efc9a0e333d47dc5e186e97386dd12c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::withdraw(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>action<sp/><sp/>transfer_action;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>asset<sp/><sp/><sp/>credit_amount;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/><sp/><sp/><sp/>currency_contract;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><sp/>memo;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>require_auth(user);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>system<sp/>is<sp/>operational<sp/>(global<sp/>masterswitch<sp/>parameter<sp/>set<sp/>to<sp/>&quot;1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>check(<ref refid="group__core_1ga51aa050f2ae06745744b56cd04184c96" kindref="member">check_master_switch</ref>(),<sp/><ref refid="constants_8hpp_1ae275e78329194567be33e687db0f4a55" kindref="member">MSG_FREEOS_SYSTEM_NOT_AVAILABLE</ref>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>currencies<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab6ecc73c0f66f2c2d359d1b4268c167a" kindref="member">currencies_index</ref><sp/>currencies_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>credits<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab37d82698fb58bac78c9056214f79ffb" kindref="member">credit_index</ref><sp/>credits_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>credit_iterator<sp/>=<sp/>credits_table.begin();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(credit_iterator<sp/>!=<sp/>credits_table.end())<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>credit_amount<sp/>=<sp/>credit_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>currency<sp/>contract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>credit_code<sp/>=<sp/>credit_amount.symbol.code().to_string();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(credit_code<sp/>==<sp/><ref refid="constants_8hpp_1a345f03bc321561d355374b1876790885" kindref="member">FREEOS_CURRENCY_CODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>freeos_tokens_contract<sp/>=<sp/><ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freeostokens&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currency_contract<sp/>=<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freeos_tokens_contract);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(credit_code<sp/>==<sp/><ref refid="constants_8hpp_1a040849566bef711962719abacf211bce" kindref="member">FREEBI_CURRENCY_CODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>freebi_tokens_contract<sp/>=<sp/><ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freebitokens&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currency_contract<sp/>=<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freebi_tokens_contract);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>in<sp/>the<sp/>currencies<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currency_iterator<sp/>=<sp/>currencies_table.find(credit_amount.symbol.raw());</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(currency_iterator<sp/>!=<sp/>currencies_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;currency<sp/>record<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currency_contract<sp/>=<sp/>currency_iterator-&gt;contract;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>memo<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;withdrawal<sp/>of<sp/>credit:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>credit_amount.to_string();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>action<sp/>transfer_action<sp/>=<sp/>action(</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{get_self(),<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(currency_contract),</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(get_self(),<sp/>user,<sp/>credit_amount,<sp/>memo));</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>transfer_action.send();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>credit<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>credit_iterator<sp/>=<sp/>credits_table.erase(credit_iterator);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="group__points_1ga3ac52570ababa28e48939c418b6fb38e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::record_deposit(uint64_t<sp/>iteration_number,<sp/>asset<sp/>amount)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a939bbf08dd5d433f88feccd9314cdf09" kindref="member">deposits_index</ref><sp/>deposits_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>record<sp/>for<sp/>the<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deposit_iterator<sp/>=<sp/>deposits_table.find(iteration_number);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deposit_iterator<sp/>==<sp/>deposits_table.end())<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>record<sp/>and<sp/>initialise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>deposits_table.emplace(get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;d)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.iteration<sp/>=<sp/>iteration_number;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.accrued<sp/>=<sp/>amount;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>deposits_table.modify(deposit_iterator,<sp/>get_self(),</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;d)<sp/>{<sp/>d.accrued<sp/>+=<sp/>amount;<sp/>});</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="group__points_1ga6a11764cd7c26d3a4a05995d9d6a5c01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::depositclear(uint64_t<sp/>iteration_number)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>freeosdiv_acct<sp/>=<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(<ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freedaoacct&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>require_auth(freeosdiv_acct);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a939bbf08dd5d433f88feccd9314cdf09" kindref="member">deposits_index</ref><sp/>deposits_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>record<sp/>for<sp/>the<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deposit_iterator<sp/>=<sp/>deposits_table.find(iteration_number);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>check(deposit_iterator<sp/>!=<sp/>deposits_table.end(),</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>deposit<sp/>record<sp/>for<sp/>the<sp/>requested<sp/>iteration<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>deposits_table.erase(deposit_iterator);</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">[[eosio::on_notify(</highlight><highlight class="stringliteral">&quot;*::transfer&quot;</highlight><highlight class="normal">)]]<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>&quot;eosio.token::transfer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="group__points_1ga73658ba9535383e56d733cb7fa6c59bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::mintfee(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user,<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>to,<sp/>asset<sp/>quantity,<sp/>std::string<sp/>memo)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;freeos<sp/>mint<sp/>fee&quot;</highlight><highlight class="normal"><sp/>||<sp/>memo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;freeos<sp/>mint<sp/>credit&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user<sp/>==<sp/>get_self())<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>check(to<sp/>==<sp/>get_self(),<sp/></highlight><highlight class="stringliteral">&quot;recipient<sp/>of<sp/>mint<sp/>fee<sp/>is<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>mint<sp/>fee<sp/>is<sp/>in<sp/>an<sp/>acceptable<sp/>currency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>payment_symbol<sp/>=<sp/>quantity.symbol;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1ab6ecc73c0f66f2c2d359d1b4268c167a" kindref="member">currencies_index</ref><sp/>currencies_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currency_iterator<sp/>=<sp/>currencies_table.find(payment_symbol.raw());</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>check(currency_iterator<sp/>!=<sp/>currencies_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;payment<sp/>is<sp/>not<sp/>in<sp/>an<sp/>accepted<sp/>form<sp/>of<sp/>currency&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>mint<sp/>fee<sp/>was<sp/>transferred<sp/>from<sp/>the<sp/>official<sp/>contract<sp/>(don&apos;t<sp/>take<sp/>any<sp/>wooden<sp/>nickels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>check(currency_iterator-&gt;contract<sp/>==<sp/>get_first_receiver(),<sp/></highlight><highlight class="stringliteral">&quot;source<sp/>of<sp/>token<sp/>is<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>amount<sp/>of<sp/>fee<sp/>in<sp/>the<sp/>credit<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1ab37d82698fb58bac78c9056214f79ffb" kindref="member">credit_index</ref><sp/>credit_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>credit_iterator<sp/>=<sp/>credit_table.find(quantity.symbol.code().raw());</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>is<sp/>already<sp/>a<sp/>credit<sp/>record,<sp/>proceed<sp/>no<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>check(credit_iterator<sp/>==<sp/>credit_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;there<sp/>is<sp/>already<sp/>a<sp/>mint<sp/>transaction<sp/>in<sp/>progress&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>credit<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>credit_table.emplace(get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.balance<sp/>=<sp/>quantity;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mint<sp/>freebi<sp/>to<sp/>freeos&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user<sp/>==<sp/>get_self())<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>check(to<sp/>==<sp/>get_self(),<sp/></highlight><highlight class="stringliteral">&quot;recipient<sp/>of<sp/>mint<sp/>fee<sp/>is<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>FREEBI<sp/>is<sp/>from<sp/>the<sp/>right<sp/>contract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>freebi_symbol<sp/>=<sp/>symbol(<ref refid="constants_8hpp_1a040849566bef711962719abacf211bce" kindref="member">FREEBI_CURRENCY_CODE</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>check(quantity.symbol<sp/>==<sp/>freebi_symbol,<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>symbol<sp/>is<sp/>not<sp/>valid,<sp/>expected<sp/>FREEBI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>freebi_tokens_contract<sp/>=<sp/><ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freebitokens&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>check(get_first_receiver()<sp/>==<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(freebi_tokens_contract),<sp/></highlight><highlight class="stringliteral">&quot;FREEBI<sp/>payment<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>amount<sp/>of<sp/>freebi<sp/>in<sp/>the<sp/>credit<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1ab37d82698fb58bac78c9056214f79ffb" kindref="member">credit_index</ref><sp/>credit_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>credit_iterator<sp/>=<sp/>credit_table.find(quantity.symbol.code().raw());</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>is<sp/>already<sp/>a<sp/>credit<sp/>record,<sp/>proceed<sp/>no<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>check(credit_iterator<sp/>==<sp/>credit_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;there<sp/>is<sp/>already<sp/>a<sp/>freebi-&gt;freeos<sp/>mint<sp/>transaction<sp/>in<sp/>progress&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>credit<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>credit_table.emplace(get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c.balance<sp/>=<sp/>quantity;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>points<sp/>group</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="points.hpp"/>
  </compounddef>
</doxygen>
