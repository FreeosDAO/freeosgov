<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="identity_8hpp" kind="file" language="C++">
    <compoundname>identity.hpp</compoundname>
    <includes local="no">eosio/eosio.hpp</includes>
    <includes local="no">eosio/system.hpp</includes>
    <includes refid="freeosgov_8hpp" local="yes">freeosgov.hpp</includes>
    <includes refid="constants_8hpp" local="yes">constants.hpp</includes>
    <includes refid="config_8hpp" local="yes">config.hpp</includes>
    <includes refid="tables_8hpp" local="yes">tables.hpp</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="freeosgov_8cpp" local="yes">freeosgov.cpp</includedby>
    <includedby refid="maintain_8hpp" local="yes">maintain.hpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>constants.hpp</label>
        <link refid="constants_8hpp"/>
      </node>
      <node id="9">
        <label>eosio.proton.hpp</label>
        <link refid="eosio_8proton_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>freeosgov.hpp</label>
        <link refid="freeosgov_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>identity.hpp</label>
        <link refid="identity_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tables.hpp</label>
        <link refid="tables_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>eosio/asset.hpp</label>
      </node>
      <node id="2">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="10">
        <label>eosio/singleton.hpp</label>
      </node>
      <node id="3">
        <label>eosio/system.hpp</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>freeosgov.cpp</label>
        <link refid="freeosgov_8cpp"/>
      </node>
      <node id="1">
        <label>identity.hpp</label>
        <link refid="identity_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>maintain.hpp</label>
        <link refid="maintain_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__identity_1ga41857775ea623287c812b3081e81ee7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string get_account_type</definition>
        <argsstring>(name user)</argsstring>
        <name>get_account_type</name>
        <param>
          <type>name</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function checks the user&apos;s verification status and returns a string indicating the user&apos;s account type, as follows: &quot;d&quot; indicates an account created via the Proton wallet, &quot;e&quot; indicates an account created programmatically, i.e. not via a Proton process &quot;v&quot; indicates that the user has completed the Proton KYC process.</para>
<para>The above is determined by examining the user entry (if it exists) in the eosio.proton::usersinfo table</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the account name of the user we are checking</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The account type of the user. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="identity.hpp" line="96" column="8" bodyfile="identity.hpp" bodystart="96" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/eosio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/system.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freeosgov_8hpp" kindref="compound">freeosgov.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="constants_8hpp" kindref="compound">constants.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8hpp" kindref="compound">config.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tables_8hpp" kindref="compound">tables.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefreedao" kindref="compound">freedao</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__identity_1ga902ae7ebb4bdaf3e2c79debe7837d21f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeosgov::has_nft(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nft_status<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>dividend<sp/>contract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>dividend_contract<sp/>=<sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(<ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;freedaoacct&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a6ba08888b3639bf355cf6f0825290712" kindref="member">nft_table</ref><sp/>nfts(dividend_contract,<sp/>dividend_contract.value);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>account_index<sp/>=<sp/>nfts.get_index&lt;</highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nft_iterator<sp/>=<sp/>account_index.find(user.value);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nft_iterator<sp/>!=<sp/>account_index.end())<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>NFT<sp/>record<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>nft_status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nft_status;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__identity_1ga96c4bd9831997a09c2935898ebdaff3b" refkind="member"><highlight class="normal">uint32_t<sp/>freeosgov::user_last_active_iteration(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fetch<sp/>the<sp/>user<sp/>lifespan<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>slifespan<sp/>=<sp/><ref refid="group__config_1ga852fcc49c92b61339f7cc58a822b5b2e" kindref="member">get_parameter</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;userlifespan&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>check(slifespan<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;user<sp/>lifespan<sp/>parameter<sp/>is<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ilifespan<sp/>=<sp/>abs(stoi(slifespan));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>user<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ad361703972a83924b6fe1c21ea2d5fc5" kindref="member">participants_index</ref><sp/>participants_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>participant_iterator<sp/>=<sp/>participants_table.begin();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>check(participant_iterator<sp/>!=<sp/>participants_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;user<sp/>registration<sp/>record<sp/>is<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>participant_iterator-&gt;registered_iteration<sp/>+<sp/>ilifespan<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__identity_1ga4210ea712d659c25ea75383f2542bff1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeosgov::is_user_alive(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>uint32_t<sp/>user_last_iteration<sp/>=<sp/><ref refid="group__identity_1ga96c4bd9831997a09c2935898ebdaff3b" kindref="member">user_last_active_iteration</ref>(user);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>user<sp/>alive?<sp/>if<sp/>current_iteration<sp/>&gt;<sp/>(user&apos;s<sp/>registered_iteration<sp/>+<sp/>lifespan<sp/>-<sp/>1)<sp/>then<sp/>user<sp/>has<sp/>exceeeded<sp/>lifespan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga227e0705813c5a3ab9dfcdc438d667b2" kindref="member">current_iteration</ref>()<sp/>&lt;=<sp/>user_last_iteration<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__identity_1ga41857775ea623287c812b3081e81ee7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="group__identity_1ga41857775ea623287c812b3081e81ee7f" kindref="member">get_account_type</ref>(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>user_account_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>determine<sp/>which<sp/>contract<sp/>we<sp/>consult<sp/>-<sp/>if<sp/>we<sp/>have<sp/>set<sp/>an<sp/>alternative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>contract<sp/>then<sp/>use<sp/>that<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>verification_contract<sp/>=<sp/><ref refid="constants_8hpp_1a8e33b7bb3adbc76136ec693e0c41dcf9" kindref="member">VERIFICATION_CONTRACT</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>the<sp/>verification<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a0a6b508bd1cf715de3eb2e023d73d3c8" kindref="member">usersinfo</ref><sp/>verification_table(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(verification_contract),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(verification_contract).<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>verification_iterator<sp/>=<sp/>verification_table.find(user.value);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verification_iterator<sp/>!=<sp/>verification_table.end())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>found,<sp/>so<sp/>default<sp/>account_type<sp/>is<sp/>&apos;d&apos;,<sp/>unless<sp/>we<sp/>find<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>user_account_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structkyc__prov" kindref="compound">kyc_prov</ref><sp/>=<sp/>verification_iterator-&gt;kyc;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structkyc__prov" kindref="compound">kyc_prov</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fn_pos<sp/>=<sp/><ref refid="structkyc__prov" kindref="compound">kyc_prov</ref>[i].<ref refid="structkyc__prov_1a2947972719ea888ca317b96a2c7334de" kindref="member">kyc_level</ref>.find(</highlight><highlight class="stringliteral">&quot;firstname&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ln_pos<sp/>=<sp/><ref refid="structkyc__prov" kindref="compound">kyc_prov</ref>[i].<ref refid="structkyc__prov_1a2947972719ea888ca317b96a2c7334de" kindref="member">kyc_level</ref>.find(</highlight><highlight class="stringliteral">&quot;lastname&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fn_pos<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>ln_pos<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_account_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user_account_type;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__identity_1ga8c70e7d4b7de03fcacc779c592add5dc" refkind="member"><highlight class="normal">asset<sp/>freeosgov::calculate_user_cls_addition()<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1aa95b3ecf854063b165aa1aa5b2d10a00" kindref="member">parameters_index</ref><sp/>parameters_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>cls<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>int64_t<sp/>uclsamount;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uclsamount_iterator<sp/>=<sp/>parameters_table.find(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;uclsamount&quot;</highlight><highlight class="normal">).<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uclsamount_iterator<sp/>!=<sp/>parameters_table.end())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>uclsamount<sp/>=<sp/>stoi(uclsamount_iterator-&gt;value);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>uclsamount<sp/>=<sp/><ref refid="constants_8hpp_1a23c646f6efd4427604ed4ad017be53e0" kindref="member">UCLSAMOUNT</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>hard<sp/>floor<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>double<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a413e9402bbc2f8d3ebdaacaea6c95b11" kindref="member">dparameters_index</ref><sp/>dparameters_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>daoshare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>daoshare;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>daoshare_iterator<sp/>=<sp/>dparameters_table.find(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;daoshare&quot;</highlight><highlight class="normal">).<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(daoshare_iterator<sp/>!=<sp/>dparameters_table.end())<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>daoshare<sp/>=<sp/>daoshare_iterator-&gt;value;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>daoshare<sp/>=<sp/><ref refid="constants_8hpp_1a0768bf21324b2abeb467ac2524138f8e" kindref="member">DAOSHARE</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>hard<sp/>floor<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>partnershare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>partnershare;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>partnershare_iterator<sp/>=<sp/>dparameters_table.find(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref>(</highlight><highlight class="stringliteral">&quot;partnershare&quot;</highlight><highlight class="normal">).<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partnershare_iterator<sp/>!=<sp/>dparameters_table.end())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>partnershare<sp/>=<sp/>partnershare_iterator-&gt;value;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>partnershare<sp/>=<sp/><ref refid="constants_8hpp_1aa285cb02e451ed96f684270b478e56ed" kindref="member">PARTNERSHARE</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>hard<sp/>floor<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>total<sp/>asset<sp/>for<sp/>user<sp/>CLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>int64_t<sp/>user_cls_amount<sp/>=<sp/>uclsamount<sp/>*<sp/>(1.0<sp/>+<sp/>daoshare<sp/>+<sp/>partnershare);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>asset<sp/>ucls<sp/>=<sp/>asset(user_cls_amount<sp/>*<sp/>10000,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ucls;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group__identity_1gaefe73a847bdaafab06244891a97288be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::reguser(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>detect<sp/>if<sp/>the<sp/>user<sp/>has<sp/>an<sp/>existing<sp/>record<sp/>from<sp/>the<sp/>airclaim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>require_auth(user);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>system<sp/>is<sp/>operational<sp/>(masterswitch<sp/>parameter<sp/>set<sp/>to<sp/>&quot;1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>check(<ref refid="group__core_1ga51aa050f2ae06745744b56cd04184c96" kindref="member">check_master_switch</ref>(),<sp/><ref refid="constants_8hpp_1ae275e78329194567be33e687db0f4a55" kindref="member">MSG_FREEOS_SYSTEM_NOT_AVAILABLE</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>current<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="namespacefreedao_1a7cf62a2b34c57e564407e4edd039903f" kindref="member">iteration</ref><sp/>=<sp/><ref refid="group__core_1ga227e0705813c5a3ab9dfcdc438d667b2" kindref="member">current_iteration</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>check(<ref refid="namespacefreedao_1a7cf62a2b34c57e564407e4edd039903f" kindref="member">iteration</ref><sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>freeos<sp/>system<sp/>is<sp/>not<sp/>yet<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>user<sp/>already<sp/>registered?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>account<sp/>in<sp/>the<sp/>participants<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ad361703972a83924b6fe1c21ea2d5fc5" kindref="member">participants_index</ref><sp/>participants_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>participant_iterator<sp/>=<sp/>participants_table.begin();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>check(participant_iterator<sp/>==<sp/>participants_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;user<sp/>is<sp/>already<sp/>registered&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>account<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>=<sp/><ref refid="group__identity_1ga41857775ea623287c812b3081e81ee7f" kindref="member">get_account_type</ref>(user);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>check(<ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;please<sp/>complete<sp/>kyc<sp/>before<sp/>registering&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>capture<sp/>the<sp/>user&apos;s<sp/>POINTs<sp/>balance<sp/>-<sp/>as<sp/>these<sp/>POINTs<sp/>will<sp/>be<sp/>mint-fee-free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>asset<sp/>liquid_points<sp/>=<sp/>asset(0,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>default=0<sp/>if<sp/>POINTs<sp/>balance<sp/>record<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1a38503d8a260b82289f804bbd89b0efe0" kindref="member">accounts</ref><sp/>accounts_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points_iterator<sp/>=<sp/>accounts_table.find(symbol_code(<ref refid="constants_8hpp_1acb0201d267a4c159ce4a2828f4208735" kindref="member">POINT_CURRENCY_CODE</ref>).raw());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_iterator<sp/>!=<sp/>accounts_table.end())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>liquid_points<sp/>=<sp/>points_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>include<sp/>the<sp/>locked<sp/>POINTs<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>asset<sp/>locked_points<sp/>=<sp/>asset(0,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);<sp/></highlight><highlight class="comment">//<sp/>default=0<sp/>if<sp/>locked<sp/>POINTs<sp/>balance<sp/>record<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ab8b3032b5445fb0374789bd51ca4b2b5" kindref="member">lockaccounts</ref><sp/>locked_accounts_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>locked_points_iterator<sp/>=<sp/>locked_accounts_table.find(symbol_code(<ref refid="constants_8hpp_1acb0201d267a4c159ce4a2828f4208735" kindref="member">POINT_CURRENCY_CODE</ref>).raw());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locked_points_iterator<sp/>!=<sp/>locked_accounts_table.end())<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>locked_points<sp/>=<sp/>locked_points_iterator-&gt;balance;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>if<sp/>the<sp/>user<sp/>has<sp/>an<sp/>AIRKEY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>asset<sp/>airkey_allowance<sp/>=<sp/>asset(0,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);<sp/></highlight><highlight class="comment">//<sp/>default=0<sp/>if<sp/>no<sp/>AIRKEY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>airkey_iterator<sp/>=<sp/>accounts_table.find(symbol_code(<ref refid="constants_8hpp_1aced9a557ce1010e32f381edd7f8857a9" kindref="member">AIRKEY_CURRENCY_CODE</ref>).raw());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(airkey_iterator<sp/>!=<sp/>accounts_table.end())<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>airkey_allowance<sp/>=<sp/>asset(<ref refid="constants_8hpp_1ab36993337dc5f43b6d444e3ff5cc4389" kindref="member">AIRKEY_MINT_FEE_FREE_ALLOWANCE</ref><sp/>*<sp/>10000,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>asset<sp/>mintfeefree_allowance<sp/>=<sp/>liquid_points<sp/>+<sp/>locked_points<sp/>+<sp/>airkey_allowance;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>mint-fee-free<sp/>allowance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mintfeefree_allowance.amount<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>in<sp/>the<sp/>mint_fee_free<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1ac80aa2ff9b31f7f50b0c3e369ab0f076" kindref="member">mintfeefree_index</ref><sp/>mintfeefree_table(get_self(),<sp/>user.value);<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mintfeefree_iterator<sp/>=<sp/>mintfeefree_table.begin();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mintfeefree_iterator<sp/>==<sp/>mintfeefree_table.end())<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emplace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mintfeefree_table.emplace(get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.balance<sp/>=<sp/>mintfeefree_allowance;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>-<sp/>should<sp/>not<sp/>be<sp/>necessary<sp/>to<sp/>modify,<sp/>but<sp/>include<sp/>this<sp/>code<sp/>in<sp/>the<sp/>event<sp/>of<sp/>migrations,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mintfeefree_table.modify(mintfeefree_iterator,<sp/>get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.balance<sp/>=<sp/>mintfeefree_allowance;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>record<sp/>to<sp/>the<sp/>participants<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>participants_table.emplace(get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;participant)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>participant.account_type<sp/>=<sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>participant.registered_iteration<sp/>=<sp/><ref refid="namespacefreedao_1a7cf62a2b34c57e564407e4edd039903f" kindref="member">iteration</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>participant.total_issuance_amount<sp/>=<sp/>asset(0,<sp/><ref refid="constants_8hpp_1a11630f45663213dbea3d8606df790e94" kindref="member">POINT_CURRENCY_SYMBOL</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>system<sp/>record<sp/>-<sp/>number<sp/>of<sp/>users<sp/>and<sp/>CLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>asset<sp/>ucls<sp/>=<sp/><ref refid="group__identity_1ga8c70e7d4b7de03fcacc779c592add5dc" kindref="member">calculate_user_cls_addition</ref>();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1af856d8ec4e25c214e10d3e1a6f961bc8" kindref="member">system_index</ref><sp/>system_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>system_iterator<sp/>=<sp/>system_table.begin();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(system_iterator<sp/>==<sp/>system_table.end())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emplace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>system_table.emplace(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sys)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.usercount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>CLS<sp/>if<sp/>a<sp/>verified<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__identity_1ga3958d16d2ce524d53eb907e7826f5046" kindref="member">is_user_verified</ref>(user))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.cls<sp/>=<sp/>ucls;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>system_table.modify(system_iterator,<sp/>get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sys)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys.usercount<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>CLS<sp/>if<sp/>a<sp/>verified<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__identity_1ga3958d16d2ce524d53eb907e7826f5046" kindref="member">is_user_verified</ref>(user))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.cls<sp/>+=<sp/>ucls;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>delete<sp/>the<sp/>record<sp/>from<sp/>the<sp/>old<sp/>users<sp/>table<sp/>if<sp/>they<sp/>are<sp/>already<sp/>registered<sp/>with<sp/>the<sp/>AirClaim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>gov<sp/>&apos;users&apos;<sp/>table<sp/>to<sp/>be<sp/>renamed<sp/>&apos;register&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group__identity_1gae10cd39a0a766716debdc9ad9cb31586" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeosgov::reregister(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>require_auth(user);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>system<sp/>is<sp/>operational<sp/>(masterswitch<sp/>parameter<sp/>set<sp/>to<sp/>&quot;1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>check(<ref refid="group__core_1ga51aa050f2ae06745744b56cd04184c96" kindref="member">check_master_switch</ref>(),<sp/><ref refid="constants_8hpp_1ae275e78329194567be33e687db0f4a55" kindref="member">MSG_FREEOS_SYSTEM_NOT_AVAILABLE</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>original<sp/>verified<sp/>user<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verified_before<sp/>=<sp/><ref refid="group__identity_1ga3958d16d2ce524d53eb907e7826f5046" kindref="member">is_user_verified</ref>(user);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>current<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>check(<ref refid="group__core_1ga227e0705813c5a3ab9dfcdc438d667b2" kindref="member">current_iteration</ref>()<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>freeos<sp/>system<sp/>is<sp/>not<sp/>yet<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>account<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ad361703972a83924b6fe1c21ea2d5fc5" kindref="member">participants_index</ref><sp/>participants_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>participant_iterator<sp/>=<sp/>participants_table.begin();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>user<sp/>has<sp/>a<sp/>user<sp/>registration<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>check(participant_iterator<sp/>!=<sp/>participants_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;user<sp/>is<sp/>not<sp/>registered<sp/>with<sp/>freeos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>account<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>=<sp/><ref refid="group__identity_1ga41857775ea623287c812b3081e81ee7f" kindref="member">get_account_type</ref>(user);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>participant<sp/>account<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>participants_table.modify(participant_iterator,<sp/>get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;participant)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>participant.account_type<sp/>=<sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>verified<sp/>user<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verified_after<sp/>=<sp/><ref refid="group__identity_1ga3958d16d2ce524d53eb907e7826f5046" kindref="member">is_user_verified</ref>(user);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>CLS<sp/>if<sp/>a<sp/>user<sp/>has<sp/>become<sp/>verified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verified_before<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>verified_after<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1af856d8ec4e25c214e10d3e1a6f961bc8" kindref="member">system_index</ref><sp/>system_table(get_self(),<sp/>get_self().<ref refid="namespacefreedao_1a4b32c29077d5af600a57e7b5414c16e9" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>system_iterator<sp/>=<sp/>system_table.begin();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>check(system_iterator<sp/>!=<sp/>system_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;system<sp/>record<sp/>is<sp/>undefined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>cls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>asset<sp/>ucls<sp/>=<sp/><ref refid="group__identity_1ga8c70e7d4b7de03fcacc779c592add5dc" kindref="member">calculate_user_cls_addition</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>system_table.modify(system_iterator,<sp/>get_self(),<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sys)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.cls<sp/>+=<sp/>ucls;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="group__identity_1gae606cca008a6d2f91a5b158dcd86ee46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeosgov::is_registered(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ad361703972a83924b6fe1c21ea2d5fc5" kindref="member">participants_index</ref><sp/>participants_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>participant_iterator<sp/>=<sp/>participants_table.begin();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(participant_iterator<sp/>!=<sp/>participants_table.end())<sp/>?<sp/>true<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="group__identity_1ga3958d16d2ce524d53eb907e7826f5046" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeosgov::is_user_verified(<ref refid="namespacefreedao_1a99c937e2fdd8ecb5012ea530cdae62b6" kindref="member">name</ref><sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a3d5a6dcdbc17ac1d48f3493d56828f1f" kindref="member">verified</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>participant<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="namespacefreedao_1ad361703972a83924b6fe1c21ea2d5fc5" kindref="member">participants_index</ref><sp/>participants_table(get_self(),<sp/>user.value);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>participant_iterator<sp/>=<sp/>participants_table.begin();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>check(participant_iterator<sp/>!=<sp/>participants_table.end(),<sp/></highlight><highlight class="stringliteral">&quot;user<sp/>is<sp/>not<sp/>registered&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>=<sp/>participant_iterator-&gt;account_type;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal"><sp/>||<sp/><ref refid="namespacefreedao_1aca5956f1e4d2f2b06acf24dde06415b4" kindref="member">account_type</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1a3d5a6dcdbc17ac1d48f3493d56828f1f" kindref="member">verified</ref>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__identity_1ga902ae7ebb4bdaf3e2c79debe7837d21f" kindref="member">has_nft</ref>(user))<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefreedao_1a3d5a6dcdbc17ac1d48f3493d56828f1f" kindref="member">verified</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacefreedao_1a3d5a6dcdbc17ac1d48f3493d56828f1f" kindref="member">verified</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>identity<sp/>group</highlight></codeline>
    </programlisting>
    <location file="identity.hpp"/>
  </compounddef>
</doxygen>
